name: node-js-ci

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  # Confirm that prettier was run on the changes
  prettier:
    name: Prettier Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.1
      - name: Install dependencies and run prettier-check
        run: |
          npm install
          npm run prettier-check

  # Make sure eslint passes
  eslint:
    name: ESLint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.1
      - name: Install dependencies and run eslint
        run: |
          npm install
          npm run eslint

  # Run unit tests on all platforms/versions of node
  unit:
    name: Unit Tests
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies and run tests with default env
        run: |
          npm install
          npm run jest

  # Run integration testing
  e2e:
    name: End-to-end Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies and run tests with default env
        run: |
          npm install
          npm run jest:e2e
        env:
          PG_HOST: ${{ secrets.PG_HOST }}
          PG_PORT: ${{ secrets.PG_PORT }}
          PG_USER: ${{ secrets.PG_USER }}
          PG_DATABASE: ${{ secrets.PG_DATABASE }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          USE_SSL: ${{ secrets.USE_SSL }}
          PORT: ${{ secrets.PORT }}
